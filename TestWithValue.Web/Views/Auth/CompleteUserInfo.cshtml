﻿@using TestWithValue.Domain.ViewModels.UserInfo
@model UserInfoViewModel

@{
    ViewData["Title"] = "Complete User Info";
}

<h2>Complete User Info</h2>

@if (!ViewData.ModelState.IsValid)
{
    <div class="alert alert-danger">
        <ul>
            @foreach (var error in ViewData.ModelState.Values.SelectMany(v => v.Errors))
            {
                <li>@error.ErrorMessage</li>
            }
        </ul>
    </div>
}


<form asp-action="CompleteUserInfo" method="post">
    <div class="form-group">
        <label asp-for="FullName"></label>
        <input asp-for="FullName" class="form-control" />
    </div>

    <div class="form-group">
        <label asp-for="NationalCode"></label>
        <input asp-for="NationalCode" class="form-control" />
    </div>



    <button type="submit" class="btn btn-primary">Submit</button>
</form>

@section Scripts {
    <script>
        $(document).ready(function () {
            $('#Provinces').change(function () {
                var provinceId = $(this).val();
                if (provinceId) {
                    $.getJSON('@Url.Action("GetCitiesByProvince")', { provinceId: provinceId }, function (data) {
                        var cityDropdown = $('#Cities');
                        cityDropdown.empty();
                        cityDropdown.append('<option value="">Select City</option>');
                        $.each(data, function (i, city) {
                            cityDropdown.append('<option value="' + city.cityId + '">' + city.name + '</option>');
                        });
                    });
                } else {
                    $('#Cities').empty().append('<option value="">Select City</option>');
                }
            });
        });
    </script>
}
