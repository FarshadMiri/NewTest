@using TestWithValue.Domain.ViewModels.CaseViewModel
@model CaseViewModel

@{
    ViewData["Title"] = "Create Case";
}

<h1>Create Case</h1>

<form asp-action="Create" method="post">
    <div class="form-group">
        <label asp-for="Title" class="control-label"></label>
        <input asp-for="Title" class="form-control" />
        <span asp-validation-for="Title" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label asp-for="CaseType" class="control-label"></label>
        <input asp-for="CaseType" class="form-control" />
        <span asp-validation-for="CaseType" class="text-danger"></span>
    </div>




    <div class="form-group">
        <label asp-for="LocationId" class="control-label"></label>
        <select asp-for="LocationId" class="form-control" asp-items="@(new SelectList(Model.Locations, "Value", "Text"))">
            <option value="">Select Location</option>
        </select>
        <span asp-validation-for="LocationId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <button type="submit" class="btn btn-primary">Create</button>
    </div>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}


