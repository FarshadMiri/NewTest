@using TestWithValue.Domain.ViewModels.Task
@model SupportTaskViewModel
@{
    ViewData["Title"] = "افزودن وظیفه";
}

<h2>افزودن وظیفه</h2>

<!-- لینک به فایل‌های استایل persian-datepicker -->
<link rel="stylesheet" href="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-datepicker/dist/css/persian-datepicker.css" />
<!-- لینک به فایل‌های استایل persian-timepicker -->
<link rel="stylesheet" href="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-timepicker/dist/css/persian-timepicker.css" />
<!-- لینک به فایل‌های استایل noUiSlider -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/14.6.3/nouislider.min.css" />

<div id="datepicker"></div>

<div>
    <label for="taskTitle">عنوان وظیفه:</label>
    <input type="text" id="taskTitle" placeholder="عنوان تسک را وارد کنید..." />
</div>
<div>
    <label for="LocationName">نام موقعیت مکانی:</label>
    <select id="LocationName" name="LocationName">
        <option value="">انتخاب موقعیت</option>
        @foreach (var location in Model.Locations)
        {
            <option value="@location.Name">@location.Name</option>
        }
    </select>
</div>
<div>
    <label for="timeRange">بازه زمانی ساعت:</label>
    <div id="timeRange"></div>
</div>

<div>
    <span id="startTime">09:00</span> تا <span id="endTime">18:00</span>
</div>

<!-- فرم افزودن تسک -->
<div>
    <button id="addTaskButton">اضافه کردن وظیفه</button>
</div>

<!-- لیست پرونده‌های پیشنهادی -->
<div id="caseList"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
    <script src="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-date/dist/persian-date.js"></script>
    <script src="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-datepicker/dist/js/persian-datepicker.js"></script>
    <script src="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-timepicker/dist/js/persian-timepicker.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/14.6.3/nouislider.min.js"></script>

    <script>
        let selectedDate = null;
        let selectedTimeRange = { start: "09:00", end: "18:00" };

        // تنظیم تقویم فارسی
        $('#datepicker').persianDatepicker({
            inline: true,
            format: 'YYYY/MM/DD',
            onSelect: function (unixDate) {
                selectedDate = new persianDate(unixDate).format('YYYY/MM/DD');
                const locationName = $('#LocationName').val();
                getCasesByTask(selectedDate, locationName);
            }
        });

        // ایجاد اسلایدر برای انتخاب بازه زمانی
        var slider = document.getElementById('timeRange');

        noUiSlider.create(slider, {
            start: [7, 19],
            connect: true,
            range: {
                'min': 7,
                'max': 19,
            },
            step: 1,
            format: {
                to: function (value) {
                    var hours = Math.floor(value);
                    var minutes = Math.round((value - hours) * 60);
                    return hours.toString().padStart(2, '0') + ':' + minutes.toString().padStart(2, '0');
                },
                from: function (value) {
                    return parseFloat(value);
                }
            }
        });

        // دریافت و نمایش زمان انتخاب شده
        slider.noUiSlider.on('update', function (values, handle) {
            var startTime = values[0];
            var endTime = values[1];

            document.getElementById('startTime').innerText = startTime;
            document.getElementById('endTime').innerText = endTime;
            selectedTimeRange = { start: startTime, end: endTime };
        });

        // متد برای ارسال درخواست دریافت پرونده‌ها
        function getCasesByTask(taskDate, locationName) {
            if (!taskDate || !locationName) return;

            $.ajax({
                url: '/Task/GetCasesByTask',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    TaskDate: taskDate,
                    LocationName: locationName
                }),
                success: function (response) {
                    alert(response.Message);

                    if (response.Cases.length > 0) {
                        console.log('Cases:', response.Cases);
                        // اینجا می‌توانید داده‌های پرونده‌ها را در HTML نمایش دهید.
                    }
                },
                error: function () {
                    alert('خطایی رخ داد. لطفاً دوباره تلاش کنید.');
                }
            });
        }

        // افزودن وظیفه
        $('#addTaskButton').on('click', function () {
            const title = $('#taskTitle').val();
            const locationName = $('#LocationName').val();

            if (!selectedDate || !selectedTimeRange || !title || !locationName) {
                alert('لطفاً تمام فیلدها را پر کنید.');
                return;
            }

            $.ajax({
                url: '@Url.Action("AddTask", "Task")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    TaskDate: selectedDate,
                    TaskStartTime: selectedTimeRange.start,
                    TaskEndTime: selectedTimeRange.end,
                    Title: title,
                    LocationName: locationName
                }),
                success: function (response) {
                    alert('وظیفه با موفقیت اضافه شد.');
                    $('#taskTitle').val('');
                    $('#LocationName').val('');
                    getCasesByTask(selectedDate, locationName);
                },
                error: function () {
                    alert('خطایی در افزودن وظیفه رخ داد.');
                }
            });
        });
    </script>
}
