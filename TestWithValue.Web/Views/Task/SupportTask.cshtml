@using TestWithValue.Domain.ViewModels.Task
@model SupportTaskViewModel
@{
    ViewData["Title"] = "افزودن وظیفه";
}

<h2>افزودن وظیفه</h2>

<!-- استایل‌ها -->
<link rel="stylesheet" href="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-datepicker/dist/css/persian-datepicker.css" />
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/14.6.3/nouislider.min.css" />

<!-- تقویم و فرم -->
<div id="datepicker"></div>
<div>
    <label for="taskTitle">عنوان وظیفه:</label>
    <input type="text" id="taskTitle" placeholder="عنوان تسک را وارد کنید..." />
</div>
<div>
    <label for="LocationName">نام موقعیت مکانی:</label>
    <select id="LocationName" name="LocationName">
        <option value="">انتخاب موقعیت</option>
        @foreach (var location in Model.Locations)
        {
            <option value="@location.Name">@location.Name</option>
        }
    </select>
</div>
<div>
    <label for="timeRange">بازه زمانی ساعت:</label>
    <div id="timeRange"></div>
</div>
<div>
    <span id="startTime">09:00</span> تا <span id="endTime">18:00</span>
</div>
<div>
    <button id="addTaskButton">اضافه کردن وظیفه</button>
</div>
<div id="caseList"></div>

@section Scripts {
    <script src="https://code.jquery.com/jquery-2.2.4.min.js"></script>
    <script src="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-date/dist/persian-date.js"></script>
    <script src="https://babakhani.github.io/PersianWebToolkit/beta/lib/persian-datepicker/dist/js/persian-datepicker.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/14.6.3/nouislider.min.js"></script>

    <script>
        let selectedDate = null;
        let selectedTimeRange = { start: "09:00", end: "18:00" };

        // تنظیم تقویم فارسی
        $('#datepicker').persianDatepicker({
            inline: true,
            format: 'YYYY/MM/DD',
            onSelect: function (unixDate) {
                selectedDate = new persianDate(unixDate).format('YYYY/MM/DD');
                console.log('تاریخ انتخاب شده:', selectedDate);
            }
        });

        // تغییر موقعیت مکانی
        let selectedLocationName = null; // متغیر عمومی برای ذخیره موقعیت مکانی

        $('#LocationName').on('change', function () {
            selectedLocationName = $(this).val();
            console.log('موقعیت مکانی انتخاب شده:', selectedLocationName);
        });

        // تنظیم اسلایدر برای بازه زمانی
        const slider = document.getElementById('timeRange');
        noUiSlider.create(slider, {
            start: [7, 19],
            connect: true,
            range: {
                'min': 7,
                'max': 19,
            },
            step: 1,
            format: {
                to: function (value) {
                    const hours = Math.floor(value);
                    return hours.toString().padStart(2, '0') + ':00';
                },
                from: function (value) {
                    return parseFloat(value);
                }
            }
        });

        slider.noUiSlider.on('update', function (values) {
            selectedTimeRange = { start: values[0], end: values[1] };
            $('#startTime').text(values[0]);
            $('#endTime').text(values[1]);
        });

        // ارسال درخواست دریافت پرونده‌ها
        function getCasesByTask(date, location) {
            console.log('تاریخ ارسال شده به GetCasesByTask:', date);
            console.log('موقعیت مکانی ارسال شده به GetCasesByTask:', location);

            if (!date || !location) {
                console.error('تاریخ یا موقعیت مکانی نامعتبر است.');
                return;
            }

            $.ajax({
                url: '/Task/GetCasesByTask',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({ TaskDate: date, LocationName: location }),
                success: function (response) {
                    console.log('داده‌های دریافت شده:', response);

                    if (response.cases && response.cases.length > 0) {
                        $('#caseList').html(response.cases.map(c => `<p>${c.locationName} در این شعبه پرونده برای رسیدگی وجود دارد</p>`).join(''));
                    } else {
                        $('#caseList').html('<p>هیچ پرونده‌ای یافت نشد.</p>');
                    }
                }
            });
        }

        // ارسال درخواست افزودن وظیفه
        $('#addTaskButton').on('click', function () {
            const title = $('#taskTitle').val();  // فقط یک بار اعلام شود
            const locationName = selectedLocationName;
            const date = selectedDate;

            console.log('مقدار تاریخ از DOM:', date);
            console.log('مقدار موقعیت مکانی از DOM:', locationName);

            // بررسی داده‌ها
            if (!date || !title || !locationName) {
                alert('لطفاً تمام فیلدها را پر کنید.');
                return;
            }

            // ارسال درخواست برای AddTask
            $.ajax({
                url: '@Url.Action("AddTask", "Task")',
                type: 'POST',
                contentType: 'application/json',
                data: JSON.stringify({
                    TaskDate: date,
                    TaskStartTime: selectedTimeRange.start,
                    TaskEndTime: selectedTimeRange.end,
                    Title: title,
                    LocationName: locationName
                }),
                success: function () {
                    alert('وظیفه با موفقیت اضافه شد.');

                    // ارسال درخواست برای GetCasesByTask
                    getCasesByTask(date, locationName);
                },
                error: function () {
                    alert('خطایی در افزودن وظیفه رخ داد.');
                }
            });
        });
    </script>
}
