@{
    ViewData["Title"] = "Support Requests";
}

<h1>Support Requests</h1>

<div id="taskContainer">
    <h3>Tasks:</h3>
    <!-- وظایف در اینجا نشان داده می‌شوند -->
</div>

<div id="messageContainer">
    <h3>User Requests:</h3>
    <!-- درخواست‌های کاربران در اینجا نشان داده می‌شوند -->
</div>

@section Scripts {
    <script src="https://cdn.jsdelivr.net/npm/@@microsoft/signalr@7.0.12/dist/browser/signalr.min.js"></script>

    <script>
        // ایجاد اتصال SignalR به هاب
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/taskhub") // URL هاب شما
            .build();

        // متغیر global برای ذخیره taskId
        let currentTaskId = null;

        connection.on("ReceiveNewTask", function (task) {
            const container = document.getElementById('taskContainer');
            const taskDiv = document.createElement('div');
            taskDiv.className = 'task';

            // ذخیره taskId در متغیر global
            currentTaskId = task.taskId;

            taskDiv.innerHTML = `
                <h4>${task.title}</h4>
                <p>Date: ${task.taskDate}</p>
                <p>Status: <strong>${task.isDone ? "Done" : "Pending"}</strong></p>
            `;

            const editButton = document.createElement('button');
            editButton.textContent = 'Edit';
            editButton.className = 'editButton';

            editButton.addEventListener('click', function () {
                const newMessage = prompt("Edit the message:", task.message);
                if (newMessage) {
                    // به‌روزرسانی پیام در رابط کاربری
                    taskDiv.querySelector('.message-text').textContent = newMessage;

                    // استفاده از taskId ذخیره‌شده در متغیر global
                    connection.invoke("EditUserRequest", currentTaskId, newMessage)
                        .catch(function (err) {
                            console.error("Error while editing task: " + err);
                        });
                }
            });

            taskDiv.appendChild(editButton);
            container.appendChild(taskDiv);
        });

        connection.on("ReceiveRequestFromUser", function (userId, message, title, taskId) {
            const container = document.getElementById('messageContainer');
            const messageDiv = document.createElement('div');
            messageDiv.className = 'message';
            messageDiv.innerHTML = `
                <p>User ID: ${userId}</p>
                <p class="message-text">${message}</p>
                <button class="editButton">Edit</button>
            `;

            // افزودن قابلیت ویرایش پیام
            const editButton = messageDiv.querySelector('.editButton');
            editButton.addEventListener('click', function () {
                const newMessage = prompt("Edit the message:", message);
                if (newMessage) {
                    // به‌روزرسانی پیام در رابط کاربری
                    messageDiv.querySelector('.message-text').textContent = newMessage;

                    // ارسال پیام ویرایش شده به سرور همراه با taskId
                    connection.invoke("EditUserRequest", currentTaskId, newMessage).catch(function (err) {
                        console.error("Error while editing message: " + err);
                    });
                }
            });

            container.appendChild(messageDiv);
        });

        // اتصال به SignalR
        connection.start().then(function () {
            console.log("Connected to SignalR!");
        }).catch(function (err) {
            console.error("Error while starting connection: " + err);
        });
    </script>

}

<style>
    .task, .message {
        border: 1px solid #ccc;
        padding: 10px;
        margin: 10px 0;
        border-radius: 5px;
    }

        .task h4, .message h4 {
            margin: 0;
        }

        .task p, .message p {
            margin: 5px 0;
        }

    .editButton {
        margin-top: 5px;
        padding: 5px 10px;
        font-size: 12px;
        cursor: pointer;
    }
</style>
