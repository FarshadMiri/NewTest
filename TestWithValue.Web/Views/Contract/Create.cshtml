@model TestWithValue.Domain.ViewModels.Contract.ContractCreateViewModel

@{
    ViewData["Title"] = "ایجاد قرارداد";
}

<h2>@ViewData["Title"]</h2>

<form method="post">
    

    <div class="form-group">
        <label for="TitleId">عنوان قرارداد</label>
        <select asp-for="TitleId" class="form-control" asp-items="@(new SelectList(Model.ContractTitles, "Value", "Text"))">
            <option value="">انتخاب عنوان</option>
        </select>
        <span asp-validation-for="TitleId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="PartyOneId">طرف اول قرارداد</label>
        <select asp-for="PartyOneId" class="form-control" asp-items="@(new SelectList(Model.Users, "Value", "Text"))">
            <option value="">انتخاب طرف اول</option>
        </select>
        <span asp-validation-for="PartyOneId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="PartyTwoId">طرف دوم قرارداد</label>
        <select asp-for="PartyTwoId" class="form-control"
                asp-items="@(new SelectList(Model.Lawyers != null && Model.Lawyers.Any()
                ? Model.Lawyers.Concat(Model.Users)
                : Model.Users, "Value", "Text"))">
            <option value="">انتخاب طرف دوم</option>
        </select>
        <span asp-validation-for="PartyTwoId" class="text-danger"></span>
    </div>

    <div class="form-group">
        <label for="ClauseIds">بندهای قرارداد</label>
        @foreach (var clause in Model.ContractClauses)
        {
            <div class="form-check">
                <input type="checkbox" name="ClauseIds" value="@clause.Value"
                       class="form-check-input"
                @(Model.ClauseIds.Contains(clause.Value) ? "checked" : "") />
                <label class="form-check-label">@clause.Text</label>
            </div>
        }
        <span asp-validation-for="ClauseIds" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">ایجاد قرارداد</button>
</form>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
}
